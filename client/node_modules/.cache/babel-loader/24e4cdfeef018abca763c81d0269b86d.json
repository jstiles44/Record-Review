{"ast":null,"code":"var _jsxFileName = \"/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/containers/AlbumsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport AlbumCreate from '../screens/AlbumCreate';\nimport AlbumDetails from '../screens/AlbumDetails';\nimport AlbumEdit from '../screens/AlbumEdit';\nimport Albums from '../screens/Albums';\nimport { getAllReviews } from '../services/reviews';\nimport { destroyAlbum, getAllAlbums, postAlbum, putAlbum } from '../services/albums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlbumsContainer(props) {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n  const [albums, set] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchFlavors = async () => {\n      const flavorData = await getAllFlavors();\n      setFlavors(flavorData);\n    };\n\n    fetchFlavors();\n  }, []);\n  useEffect(() => {\n    const fetchFoods = async () => {\n      const foodData = await getAllFoods();\n      setFoods(foodData);\n    };\n\n    fetchFoods();\n  }, []);\n\n  const handleCreate = async foodData => {\n    const newFood = await postFood(foodData);\n    setFoods(prevState => [...prevState, newFood]);\n    history.push('/foods');\n  };\n\n  const handleUpdate = async (id, foodData) => {\n    const updatedFood = await putFood(id, foodData);\n    setFoods(prevState => prevState.map(food => {\n      return food.id === Number(id) ? updatedFood : food;\n    }));\n    history.push('/foods');\n  };\n\n  const handleDelete = async id => {\n    await destroyFood(id);\n    setFoods(prevState => prevState.filter(food => food.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/flavors\",\n      children: /*#__PURE__*/_jsxDEV(Flavors, {\n        flavors: flavors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/new\",\n      children: /*#__PURE__*/_jsxDEV(FoodCreate, {\n        handleCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/:id/edit\",\n      children: /*#__PURE__*/_jsxDEV(FoodEdit, {\n        foods: foods,\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/:id\",\n      children: /*#__PURE__*/_jsxDEV(FoodDetails, {\n        flavors: flavors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods\",\n      children: /*#__PURE__*/_jsxDEV(Foods, {\n        foods: foods,\n        handleDelete: handleDelete,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlbumsContainer, \"5CtN+0ohYZqMyx5bjFqvRvrXsYc=\", false, function () {\n  return [useHistory];\n});\n\n_c = AlbumsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsContainer\");","map":{"version":3,"sources":["/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/containers/AlbumsContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","AlbumCreate","AlbumDetails","AlbumEdit","Albums","getAllReviews","destroyAlbum","getAllAlbums","postAlbum","putAlbum","AlbumsContainer","props","reviews","setReviews","albums","set","history","currentUser","fetchFlavors","flavorData","getAllFlavors","setFlavors","fetchFoods","foodData","getAllFoods","setFoods","handleCreate","newFood","postFood","prevState","push","handleUpdate","id","updatedFood","putFood","map","food","Number","handleDelete","destroyFood","filter","flavors","foods"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport AlbumCreate from '../screens/AlbumCreate';\nimport AlbumDetails from '../screens/AlbumDetails';\nimport AlbumEdit from '../screens/AlbumEdit';\nimport Albums from '../screens/Albums';\n\nimport { getAllReviews } from '../services/reviews';\nimport { destroyAlbum, getAllAlbums, postAlbum, putAlbum } from '../services/albums';\n\nexport default function AlbumsContainer(props) {\n  const [reviews, setReviews] = useState([]);\n  const [albums, set] = useState([]);\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchFlavors = async () => {\n      const flavorData = await getAllFlavors();\n      setFlavors(flavorData);\n    }\n    fetchFlavors();\n  }, [])\n\n  useEffect(() => {\n    const fetchFoods = async () => {\n      const foodData = await getAllFoods();\n      setFoods(foodData);\n    }\n    fetchFoods();\n  }, [])\n\n  const handleCreate = async (foodData) => {\n    const newFood = await postFood(foodData);\n    setFoods(prevState => [...prevState, newFood]);\n    history.push('/foods');\n  }\n\n  const handleUpdate = async (id, foodData) => {\n    const updatedFood = await putFood(id, foodData);\n    setFoods(prevState => prevState.map(food => {\n      return food.id === Number(id) ? updatedFood : food\n    }))\n    history.push('/foods');\n  }\n\n  const handleDelete = async (id) => {\n    await destroyFood(id);\n    setFoods(prevState => prevState.filter(food => food.id !== id))\n  }\n\n  return (\n    <Switch>\n      <Route path='/flavors'>\n        <Flavors\n          flavors={flavors}\n        />\n      </Route>\n      <Route path='/foods/new'>\n        <FoodCreate\n          handleCreate={handleCreate}\n        />\n      </Route>\n      <Route path='/foods/:id/edit'>\n        <FoodEdit\n          foods={foods}\n          handleUpdate={handleUpdate}\n        />\n      </Route>\n      <Route path='/foods/:id'>\n        <FoodDetails\n          flavors={flavors}\n        />\n      </Route>\n      <Route path='/foods'>\n        <Foods\n          foods={foods}\n          handleDelete={handleDelete}\n          currentUser={currentUser}\n        />\n      </Route>\n    </Switch>\n  )\n}"]},"metadata":{},"sourceType":"module"}