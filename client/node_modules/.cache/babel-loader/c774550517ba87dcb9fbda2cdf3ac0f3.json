{"ast":null,"code":"var _jsxFileName = \"/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/screens/Albums.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from '../components/Modal';\nimport './Albums.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Albums(props) {\n  _s();\n\n  const [open, handleOpen] = useState(false);\n  const {\n    albums,\n    handleDelete,\n    currentUser\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-title\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header\",\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums\",\n      children: [albums.map(album => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"album-link\",\n          to: `/albums/${album.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"album-title\",\n              children: album.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"release-year\",\n              children: album.release_year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"album-image\",\n              src: album.album_url,\n              alt: album.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, album.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), open && /*#__PURE__*/_jsxDEV(Modal, {\n        open: open,\n        handleOpen: handleOpen,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button-div\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/albums/new\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add an Album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Albums, \"fJ8J7Js+Ah2vlKABF7OYOAsPI/g=\");\n\n_c = Albums;\n\nvar _c;\n\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"sources":["/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/screens/Albums.jsx"],"names":["React","useState","Link","Modal","Albums","props","open","handleOpen","albums","handleDelete","currentUser","map","album","id","title","release_year","album_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,cAAP;;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBN,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAwCL,KAA9C;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBAGIG,MAAM,CAACG,GAAP,CAAWC,KAAK,iBACd,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAArD;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACA;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA,wBAA6BD,KAAK,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA,wBAA8BF,KAAK,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGE;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,GAAG,EAAEH,KAAK,CAACI,SAAxC;AAAmD,cAAA,GAAG,EAAEJ,KAAK,CAACE;AAA9D;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAqBF,KAAK,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ,eAsBE;AAAA;AAAA;AAAA;AAAA,cAtBF,EAwBGP,IAAI,iBACH,QAAC,KAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAoCA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AAAA,+BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YApCA;AAAA,kBADF;AA0CD;;GA7CuBL,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Modal from '../components/Modal';\nimport './Albums.css';\n\nexport default function Albums(props) {\n  const [open, handleOpen] = useState(false)\n  const { albums, handleDelete, currentUser } = props;\n  return (\n    <>\n      <div className='header-title'>\n        <p className='header'>Albums</p>\n        </div>\n    <div className='albums'>\n    \n      {\n        albums.map(album => (\n          <React.Fragment key={album.id}>\n            <Link className='album-link' to={`/albums/${album.id}`}>\n              <div className='album-container'>\n              <h3 className='album-title'>{album.title}</h3>\n              <h5 className='release-year'>{album.release_year}</h5>\n                <img className=\"album-image\" src={album.album_url} alt={album.title} />\n                </div>\n            </Link>\n            {/* {\n              currentUser?.id === album.user_id &&\n              <>\n                <Link to={`/albums/${album.id}/edit`}><button>Edit</button></Link>\n                <button onClick={() => handleOpen(album.id)}>delete</button>\n              </>\n            } */}\n          </React.Fragment>\n        ))\n      }\n      <br />\n      \n      {open && (\n        <Modal\n          open={open}\n          handleOpen={handleOpen}\n          handleDelete={handleDelete}\n        />\n      )}\n    </div>\n    <div className=\"add-button-div\">\n    <Link to='/albums/new'><button>Add an Album</button></Link>\n      </div>\n      </>\n  )\n}"]},"metadata":{},"sourceType":"module"}