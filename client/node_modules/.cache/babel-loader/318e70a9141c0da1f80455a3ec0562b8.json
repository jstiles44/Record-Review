{"ast":null,"code":"var _jsxFileName = \"/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/containers/AlbumsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport AlbumCreate from '../screens/AlbumCreate';\nimport AlbumDetails from '../screens/AlbumDetails';\nimport AlbumEdit from '../screens/AlbumEdit';\nimport Albums from '../screens/Albums';\nimport AlbumReview from '../screens/AlbumReview';\nimport ReviewCreate from '../screens/ReviewCreate';\nimport { getAllReviews, postReview } from '../services/reviews';\nimport { destroyAlbum, getAllAlbums, postAlbum, putAlbum } from '../services/albums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AlbumsContainer(props) {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const history = useHistory();\n  const {\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const reviewData = await getAllReviews();\n      setReviews(reviewData);\n    };\n\n    fetchReviews();\n  }, []);\n  useEffect(() => {\n    const fetchAlbums = async () => {\n      const albumData = await getAllAlbums();\n      setAlbums(albumData);\n    };\n\n    fetchAlbums();\n  }, []);\n\n  const handleCreate = async albumData => {\n    const newAlbum = await postAlbum(albumData);\n    setAlbums(prevState => [...prevState, newAlbum]);\n    history.push('/albums');\n  };\n\n  const handleCreateReview = async (id, reviewData) => {\n    const newReview = await postReview(id, reviewData);\n    setReviews(prevState => [...prevState, newReview]);\n    history.push(`/albums/${albumItem.id}/reviews`);\n  };\n\n  const handleUpdate = async (id, albumData) => {\n    const updatedAlbum = await putAlbum(id, albumData);\n    setAlbums(prevState => prevState.map(album => {\n      return album.id === Number(id) ? updatedAlbum : album;\n    }));\n    history.push('/albums');\n  };\n\n  const handleDelete = async id => {\n    await destroyAlbum(id);\n    setAlbums(prevState => prevState.filter(album => album.id !== id));\n    history.push('/albums');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums/new\",\n      children: /*#__PURE__*/_jsxDEV(AlbumCreate, {\n        handleCreate: handleCreate,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums/:id/edit\",\n      children: /*#__PURE__*/_jsxDEV(AlbumEdit, {\n        albums: albums,\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums/:id/reviews/new\",\n      children: /*#__PURE__*/_jsxDEV(ReviewCreate, {\n        handleCreateReview: handleCreateReview,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums/:id/reviews\",\n      children: /*#__PURE__*/_jsxDEV(AlbumReview, {\n        reviews: reviews,\n        albums: albums,\n        handleUpdate: handleUpdate,\n        currentUser: currentUser,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums/:id\",\n      children: /*#__PURE__*/_jsxDEV(AlbumDetails, {\n        reviews: reviews,\n        albums: albums,\n        currentUser: currentUser,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/albums\",\n      children: /*#__PURE__*/_jsxDEV(Albums, {\n        albums: albums,\n        handleDelete: handleDelete,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlbumsContainer, \"rzaT0AT7bmaNSHFV89UuNsQ9BIo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AlbumsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsContainer\");","map":{"version":3,"sources":["/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/containers/AlbumsContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","AlbumCreate","AlbumDetails","AlbumEdit","Albums","AlbumReview","ReviewCreate","getAllReviews","postReview","destroyAlbum","getAllAlbums","postAlbum","putAlbum","AlbumsContainer","props","reviews","setReviews","albums","setAlbums","history","currentUser","fetchReviews","reviewData","fetchAlbums","albumData","handleCreate","newAlbum","prevState","push","handleCreateReview","id","newReview","albumItem","handleUpdate","updatedAlbum","map","album","Number","handleDelete","filter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport AlbumCreate from '../screens/AlbumCreate';\nimport AlbumDetails from '../screens/AlbumDetails';\nimport AlbumEdit from '../screens/AlbumEdit';\nimport Albums from '../screens/Albums';\nimport AlbumReview from '../screens/AlbumReview';\nimport ReviewCreate from '../screens/ReviewCreate'\n\nimport { getAllReviews, postReview } from '../services/reviews';\nimport { destroyAlbum, getAllAlbums, postAlbum, putAlbum } from '../services/albums';\n\n\nexport default function AlbumsContainer(props) {\n  const [reviews, setReviews] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const reviewData = await getAllReviews();\n      setReviews(reviewData);\n    }\n    fetchReviews();\n  }, [])\n\n  useEffect(() => {\n    const fetchAlbums = async () => {\n      const albumData = await getAllAlbums();\n      setAlbums(albumData);\n    }\n    fetchAlbums();\n  }, [])\n\n\n  const handleCreate = async (albumData) => {\n    const newAlbum = await postAlbum(albumData);\n    setAlbums(prevState => [...prevState, newAlbum]);\n    history.push('/albums');\n  }\n\n  const handleCreateReview = async (id, reviewData) => {\n    const newReview = await postReview(id, reviewData);\n    setReviews(prevState => [...prevState, newReview]);\n    history.push(`/albums/${albumItem.id}/reviews`);\n  }\n\n  const handleUpdate = async (id, albumData) => {\n    const updatedAlbum = await putAlbum(id, albumData);\n    setAlbums(prevState => prevState.map(album => {\n      return album.id === Number(id) ? updatedAlbum : album\n    }))\n    history.push('/albums');\n  }\n\n  const handleDelete = async (id) => {\n    await destroyAlbum(id);\n    setAlbums(prevState => prevState.filter(album => album.id !== id))\n    history.push('/albums')\n  }\n\n  return (\n    <Switch>\n      \n      <Route path='/albums/new'>\n        <AlbumCreate\n          handleCreate={handleCreate}\n          currentUser={currentUser}\n        />\n      </Route>\n      <Route path='/albums/:id/edit'>\n        <AlbumEdit\n          albums={albums}\n          handleUpdate={handleUpdate}\n        />\n      </Route>\n      <Route path='/albums/:id/reviews/new'>\n        <ReviewCreate\n          handleCreateReview={handleCreateReview}\n          currentUser={currentUser}\n        />\n      </Route>\n      <Route path='/albums/:id/reviews'>\n        <AlbumReview\n          reviews={reviews}\n          albums={albums}\n          handleUpdate={handleUpdate}\n          currentUser={currentUser}\n          handleDelete={handleDelete}\n        />\n      </Route>\n     \n      <Route path='/albums/:id'>\n        <AlbumDetails\n          reviews={reviews}\n          albums={albums}\n          currentUser={currentUser}\n          handleDelete={handleDelete}\n        />\n      </Route>\n      <Route path='/albums'>\n        <Albums\n          albums={albums}\n          handleDelete={handleDelete}\n          currentUser={currentUser}\n        />\n      </Route>\n    </Switch>\n  )\n}"]},"metadata":{},"sourceType":"module"}