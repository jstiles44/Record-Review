{"ast":null,"code":"var _jsxFileName = \"/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/screens/AlbumDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { postReview } from '../services/reviews';\nimport { getOneAlbum } from '../services/albums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AlbumDetails(props) {\n  _s();\n\n  const [albumItem, setAlbumItem] = useState([]);\n  const [selectedReview, setSelectedReview] = useState('');\n  const {\n    id\n  } = useParams();\n  const {\n    albums,\n    handleDelete,\n    currentUser\n  } = props;\n  useEffect(() => {\n    const fetchAlbumItem = async () => {\n      const albumData = await getOneAlbum(id);\n      setAlbumItem(albumData);\n    };\n\n    fetchAlbumItem();\n    console.log(albumItem);\n  }, []);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setSelectedReview(value);\n  };\n\n  const handleSubmit = async () => {\n    const albumData = await postReview(id, selectedReview);\n    setAlbumItem(albumData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: albumItem.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: albumItem.release_year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: albumItem.album_url,\n      alt: albumItem.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), albums.map(album => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/albums/${album.id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: album.release_year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: album.album_url,\n          alt: album.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) === album.user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/albums/${album.id}/edit`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpen(album.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, album.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleSubmit();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AlbumDetails, \"lN90eVEqHPr/O/zTev/MAw++jS8=\", false, function () {\n  return [useParams];\n});\n\n_c = AlbumDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumDetails\");","map":{"version":3,"sources":["/Users/jacobstiles/general_assembly/sei/sapphire/unit_4/projects/Record-Review/client/src/screens/AlbumDetails.jsx"],"names":["useState","useEffect","useParams","postReview","getOneAlbum","AlbumDetails","props","albumItem","setAlbumItem","selectedReview","setSelectedReview","id","albums","handleDelete","currentUser","fetchAlbumItem","albumData","console","log","handleChange","e","value","target","handleSubmit","title","release_year","album_url","map","album","user_id","handleOpen","preventDefault"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { postReview } from '../services/reviews';\nimport { getOneAlbum } from '../services/albums';\n\nexport default function AlbumDetails(props) {\n  const [albumItem, setAlbumItem] = useState([]);\n  const [selectedReview, setSelectedReview] = useState('');\n  const { id } = useParams();\n  const { albums, handleDelete, currentUser } = props;\n\n  useEffect(() => {\n    const fetchAlbumItem = async () => {\n      const albumData = await getOneAlbum(id);\n      setAlbumItem(albumData);\n    }\n    fetchAlbumItem()\n    console.log(albumItem)\n  }, [])\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setSelectedReview(value)\n  }\n\n  const handleSubmit = async () => {\n    const albumData = await postReview(id, selectedReview);\n    setAlbumItem(albumData);\n  }\n\n  return (\n    <div>\n      \n      <h3>{albumItem.title}</h3>\n      <h4>{albumItem.release_year}</h4>\n      <img src={albumItem.album_url} alt={albumItem.title} />\n      {/* {\n              currentUser?.id === album.user_id &&\n              <>\n                <Link to={`/albums/${album.id}/edit`}><button>Edit</button></Link>\n                <button onClick={() => handleOpen(album.id)}>delete</button>\n              </>\n            } */}\n      \n      {\n        albums.map(album => (\n          <React.Fragment key={album.id}>\n            <Link to={`/albums/${album.id}`}>\n              <h3>{album.title}</h3>\n              <h5>{album.release_year}</h5>\n              <img src={album.album_url} alt={album.title}/>\n            </Link>\n            {\n              currentUser?.id === album.user_id &&\n              <>\n                <Link to={`/albums/${album.id}/edit`}><button>Edit</button></Link>\n                <button onClick={() => handleOpen(album.id)}>delete</button>\n              </>\n            }\n          </React.Fragment>\n        ))\n      }\n        \n    \n      <form onSubmit={(e) => {\n        e.preventDefault()\n        handleSubmit()\n      }}>\n        {/* <select onChange={handleChange} defaultValue='default'>\n          <option value='default' disabled>-- Select a flavor --</option>\n          {reviews.map(review => (\n            <option value={review.id}>{review}</option>\n          ))}\n        </select> */}\n        <button>add</button>\n      </form>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}